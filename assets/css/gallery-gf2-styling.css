/* ---------GLOBAL STYLING--------- */

/* @import url("https://fonts.googleapis.com/css2?family=Merriweather:wght@700;900&family=Oswald&display=swap"); */

@font-face {
    font-family: Manrope;
    /* "Note: Not all browsers have implemented the full syntax for font format, so test carefully. All browsers that support variable fonts will still render them if you set the format to just the file format, rather than format-variations (i.e., woff2 instead of woff2-variations), but it's best to use the proper syntax if possible." https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_fonts/Variable_fonts_guide */
    src: url(../fonts/Manrope-VariableFont_wght.ttf) format('ttf-variations');
    font-display: swap;
    /* "with variable fonts we need at least couple of things in order for our fonts to render reliably.
    If our font variation is on the weight axis, we should set a range for the font-weight property. A range of 100 to 800 permits us to use any weight in that range (assuming theyâ€™re available in our font file)." https://css-irl.info/how-i-solved-my-font-rendering-problem/ */
    font-weight: 200 800;
}

* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

html {
    /* Based on colours from the Kryb assignment, which could include such a JS gallery */
    --clr-light: #fafafa; /* --clr-light is a grey that is almost white */
    --clr-lighter-grey: #e9e9e9;
    --clr-secondary: #cacad2;
    --clr-dark: #343434;
    --clr-black: #000000;
    --clr-headings: #63bddd;
    --clr-primary: #4aaacc; /* darker than headings */
    --clr-purple: #31316b;
    --clr-terracotta: #e79702; /* looks good next to primary and purple */
    --clr-warning: #dd4111;
    --clr-success: #449955;

    /* font-family: 'Merriweather', serif; */
    font-family: Manrope, 'Times New Roman', Times, serif;
    color: var(--clr-dark);
}

/* Typography */
hgroup {
    color: var(--clr-purple);
    justify-items: center;
}

h1 {
    /* font-family: 'Oswald', sans-serif; */
    font-size: 2rem;
    text-transform: uppercase;
}

hgroup p {
    font-size: 1.5rem;
}

h2 {
    margin-top: 1.5rem;
    margin-bottom: 2rem;
    justify-self: center;
    color: var(--clr-headings);
    text-decoration-line: underline;
    text-decoration-style: wavy;
    text-underline-offset: .5rem;
    text-decoration-color: var(--clr-purple);
}

.warning {
    justify-self: center;
    margin-bottom: 2rem;
}

.warning strong {
    color: var(--clr-warning);
}

/* TO DO: maybe edit this.
Currently, there is a footer after an image inside of an article inside of a list item. */
article {
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    height: 100%;
    background-color: var(--clr-dark);

    color: var(--clr-light);
    font-size: 1.2rem;
}

img {
    width: 100%;
    object-fit: contain;
}

article footer {
    line-height: 2rem;
    text-align: center;
}

/* ---------COMPONENT 1: basic composition--------- */

.pageheader {
    background-color: var(--clr-primary);
    min-height: 100px;
    justify-items: center;
    align-content: center;
}

main {
    min-height: 450px;
}

.wrapper {
    margin-inline: 1rem;
} 

.pagefooter {
    background-color: var(--clr-terracotta);
    min-height: 80px;
    align-content: end;
}

/* Slider grids and their elements */

.slider-container {
    display: grid;
    grid-template-columns: .5fr 7fr .5fr;
    grid-template-rows: 1fr;
    margin-bottom: 4rem;
}

.inner-grid-container {
    display: grid;
    grid-template-columns: 2fr 2fr 2fr;
    grid-template-rows: 1fr;
    padding-inline: 0;
    gap: 4rem;
    list-style: none;
}

.slider-button-container {
    display: flex;
    align-items: center;
}

.slider-button-container-right {
    justify-content: right;
}

.round-button {
    width: 3rem;
    height: 3rem;
    border: none;
    background-color: var(--clr-lighter-grey);
    border-radius: 50%;
}

.round-button svg {
    /* Alternative suggested by teacher.
    I was just wondering if there was a better solution than what I found because align-self and justify-self did not center the SVG in the circle.
    The following makes sure that the same padding exists on all sides, in order to place the image in the middle of the circle.

    position: absolute; (position: relative; also has to be declared as a property of .round-button)
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); (this takes half of the width or height of the element being placed, and it uses it to compensate, otherwise the element will sit on the 50% line inside of the parent)

    This being said, because the icon can have a shape with more air on one side and thereby create the optical illusion that it is not centered, it might be necessary to adjust the position based on the look, e.g.: 
    transform: translate(-58%, -50%);
    
    To adjust the size:
    transform: scale(0.8); 
    OR
    transform: scale(1.2);
    */
    width: 84%;
    height: 84%;
    padding: 8%; 
}

.inner-grid-container li {
    display: none;
}

.inner-grid-container li:nth-of-type(1),
.inner-grid-container li:nth-of-type(2),
.inner-grid-container li:nth-of-type(3) {
    display: block;
}

/* TO DO: delete when done: Trying to find alternatives to make the JS work. */

.hidden {
    display: none;
}

/* TO DO: give a style to the footer of the article that matches the recipe intro in the Kryb assignment (white text on a black background). */

/* ---------COMPONENT 2: hover, focus and active effects--------- */

.round-button:hover,
.round-button:focus {
    background-color: var(--clr-dark);
}

.round-button:active {
    background-color: var(--clr-primary);
}
